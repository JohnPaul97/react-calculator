{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["INITIAL_RESULT","DEFAULTS","backgroundColor","buttonColor","resultLabel","expressionLabel","Calculator","props","classes","theme","root","padding","margin","width","borderRadius","border","flexGrow","button","textAlign","color","resultField","audio","Audio","CustomSwitch","switchBase","checked","track","useState","playsAudio","handleIsPlayingAudio","setIsPlayingAudio","handleOnClick","newExpr","expression","setExpression","useEffect","updateResult","handleReset","setResult","handleEqualOnClick","newResult","eval","err","handleResultOnchange","e","value","className","onClick","container","spacing","item","xs","id","label","variant","result","onChange","control","name","calculatorButton","resetButton","equalButton","App","ReactDOM","render","document","getElementById"],"mappings":"gjCAIMA,eAAN,EAEMC,SAAW,CACbC,gBADa,UAEbC,YAFa,UAGbC,YAHa,SAIbC,gBAAiB,cAGfC,WAAaC,SAAbD,WAAaC,OAAS,IAClB,gBAAN,MAAM,4BAAN,MAAM,wBAAN,MAAM,YAA6CF,gBAAnD,MAAmDA,gBAC/CG,QAAU,iEAAWC,YAAK,MAAK,CAC3BC,KAAM,CACFC,QADE,OAEFC,OAFE,OAGFC,MAHE,MAIFX,gBAAiBA,iBAAmBD,SAJlC,gBAKFa,aALE,OAMFC,OANE,kBAOFC,SAPE,EAQFH,MAAO,SAEXI,OAAQ,CACJN,QAASF,UADL,GAEJS,UAFI,SAGJC,MAAOV,eAHH,QAIJP,gBAAiBC,aAAeF,SAJ5B,YAKJW,OAAQ,OAEZQ,YAAa,CACTT,QAASF,UADA,GAETP,gBAAiBA,iBAAmBD,SAASC,iBAEjDS,QAAS,CACLA,QAAS,eAvBP,GA0BRU,MAAQ,IAAIC,MA3BlB,+DA6BMC,aAAe,gEAAW,CAC5BC,WAAY,CACRL,MAAOjB,iBAAmBD,SADlB,gBAER,YAAa,CACTkB,MAAOhB,aAAeF,SAASE,aAEnC,qBAAsB,CAClBD,gBAAiBC,aAAeF,SAASE,cAGjDsB,QAV4B,GAW5BC,MAAO,IAXU,CAArB,kDA9BwB,UA4CYC,oDAApC,gBA5CwB,2NA4ClB,WA5CkB,cA4ClB,cA5CkB,yBA6CIA,oDAA5B,gBA7CwB,4NA6ClB,OA7CkB,cA6ClB,UA7CkB,yBA8CoBA,qDAA5C,GA9CwB,4NA8ClB,eA9CkB,cA8ClB,kBA9CkB,cAgDlBC,WAAa,WACf,gBACIP,cAIFQ,qBAAuB,WACzBC,oCAGEC,cAAiBd,YACnBW,aACA,IAAMI,EAAUC,yBAAsBA,YAAtBA,UAAhB,EACAC,kBAIJC,sDAAU,WACNC,iBACD,CAFHD,aAIA,IAAME,YAAc,WAChBT,aACAM,8BACAI,2BAGEC,mBAAqB,WACvBX,aACAM,uBAGEE,aAAe,SAAfA,eACF,IAAII,UAAJ,KAEA,IACIA,UAAYC,KAAZD,YAEJ,MAAOE,KACHF,kBAGJF,sBAGEK,qBAAwBC,YAAM,IACxBC,EAAUD,EAAlB,OAAQC,MAEOX,cAAfW,aAGJ,6BACI,OAAO,6GAAQC,UAAWtC,QAAnB,OAAmCuC,QAAS,kBAAMhB,cAAcc,KAAvE,GAGJ,uBACI,OAAO,6GAAQC,UAAWtC,QAAnB,OAAmCuC,QAAS,kBAAMV,gBAAzD,KAGJ,uBACI,OAAO,6GAAQS,UAAWtC,QAAnB,OAAmCuC,QAAS,kBAAMR,uBAAzD,KAGJ,OACI,kEAAKO,UAAWtC,QAAQE,MACpB,6GAAMsC,WAAN,EAAgBC,QAAS,GACrB,6GAAMC,MAAN,EAAWC,GAAI,IACX,6GACIL,UAAWtC,QADf,YAEI4C,GAFJ,sBAGIC,MAAOjD,aAAeH,SAH1B,YAIIqD,QAJJ,WAKIT,MAAOU,UAGf,6GAAML,MAAN,EAAWC,GAAI,IACX,6GACIL,UAAWtC,QADf,YAEI4C,GAFJ,sBAGIC,MAAOhD,iBAAmBJ,SAH9B,gBAKIqD,QALJ,WAMIE,SANJ,qBAMoCX,MAAOZ,cAG/C,6GAAkBwB,QAAS,yEAAchC,QAAd,eAAuC+B,SAAvC,qBAAuEE,KAAK,gBAC/FL,MAAM,eAEd,6GAAMH,MAAN,EAAWC,GAAI,IACVQ,iBADL,KAEKC,cACAD,iBA1BT,MA6BI,6GAAMT,MAAN,EAAWC,GAAI,IACVQ,iBADL,GAEKA,iBAFL,GAGKA,iBAHL,GAIKA,iBAjCT,MAoCI,6GAAMT,MAAN,EAAWC,GAAI,IACVQ,iBADL,GAEKA,iBAFL,GAGKA,iBAHL,GAIKA,iBAxCT,MA0CI,6GAAMT,MAAN,EAAWC,GAAI,IACVQ,iBADL,GAEKA,iBAFL,GAGKA,iBAHL,GAIKA,iBA9CT,MAgDI,6GAAMT,MAAN,EAAWC,GAAI,IACVQ,iBADL,GAEKA,iBAFL,KAGKA,iBAHL,KAIKE,kB,yMCrKNC,G,MARH,WACV,OACE,yBAAKhB,UAAU,OACb,kBAAC,IAAD,SCFNiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.99d91bd0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, TextField, Grid, Switch, FormControlLabel}  from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst INITIAL_RESULT = 0;\n\nconst DEFAULTS = {\n    backgroundColor: '#7e7e7e',\n    buttonColor: '#46403D',\n    resultLabel: 'result',\n    expressionLabel: 'expression',\n}\n\nconst Calculator = props => {\n    const { backgroundColor, buttonColor, resultLabel, expressionLabel } = props,\n        classes = makeStyles(theme => ({\n            root: {\n                padding: '10px',\n                margin: '10px',\n                width: '50%',\n                backgroundColor: backgroundColor || DEFAULTS.backgroundColor,\n                borderRadius: '10px',\n                border: `1px solid black`,\n                flexGrow: 0,\n                width: '300px'\n            },\n            button: {\n                padding: theme.spacing(1),\n                textAlign: \"center\",\n                color: theme.palette.text.primary,\n                backgroundColor: buttonColor || DEFAULTS.buttonColor,\n                margin: \"5px\"\n            },\n            resultField: {\n                padding: theme.spacing(1),\n                backgroundColor: backgroundColor || DEFAULTS.backgroundColor,\n            },\n            padding: {\n                padding: 'top 10px'\n            }\n        }))()\n        , audio = new Audio(\"https://storage.cloud.google.com/johnpaul-bucket/click2.mp3\");\n\n    const CustomSwitch = withStyles({\n        switchBase: {\n            color: backgroundColor || DEFAULTS.backgroundColor,\n            '&$checked': {\n                color: buttonColor || DEFAULTS.buttonColor,\n            },\n            '&$checked + $track': {\n                backgroundColor: buttonColor || DEFAULTS.buttonColor,\n            },\n        },\n        checked: {},\n        track: {},\n    })(Switch);\n\n    const [expression, setExpression] = useState(INITIAL_RESULT);\n    const [result, setResult] = useState(INITIAL_RESULT);\n    const [isPlayingAudio, setIsPlayingAudio] = useState(true);\n\n    const playsAudio = () => {\n        if (isPlayingAudio) {\n            audio.play();\n        }\n    }\n\n    const handleIsPlayingAudio = () => {\n        setIsPlayingAudio(!isPlayingAudio);\n    }\n\n    const handleOnClick = (button) => {\n        playsAudio();\n        const newExpr = expression !== 0 ? `${expression}${button}` : button;\n        setExpression(newExpr);\n    }\n\n    //callback for set expression hook\n    useEffect(() => {\n        updateResult();\n    }, [expression]);\n\n    const handleReset = () => {\n        playsAudio();\n        setExpression(INITIAL_RESULT);\n        setResult(INITIAL_RESULT);\n    }\n\n    const handleEqualOnClick = () => {\n        playsAudio();\n        setExpression(result);\n    }\n\n    const updateResult = () => {\n        let newResult = null;\n\n        try {\n            newResult = eval(expression);\n        }\n        catch (err) {\n            newResult = 'error';\n        }\n\n        setResult(newResult);\n    }\n\n    const handleResultOnchange = (e) => {\n        const { value } = e.target;\n\n        value === '' ? setExpression(0) : setExpression(value);\n    }\n\n    function calculatorButton(value) {\n        return <Button className={classes.button} onClick={() => handleOnClick(value)}>{value}</Button>;\n    }\n\n    function resetButton() {\n        return <Button className={classes.button} onClick={() => handleReset()}>C</Button>;\n    }\n\n    function equalButton() {\n        return <Button className={classes.button} onClick={() => handleEqualOnClick()}>=</Button>;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.resultField}\n                        id=\"outlined-helperText\"\n                        label={resultLabel || DEFAULTS.resultLabel}\n                        variant=\"outlined\"\n                        value={result}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.resultField}\n                        id=\"outlined-helperText\"\n                        label={expressionLabel || DEFAULTS.expressionLabel}\n\n                        variant=\"outlined\"\n                        onChange={handleResultOnchange} value={expression}\n                    />\n                </Grid>\n                <FormControlLabel control={<CustomSwitch checked={isPlayingAudio} onChange={handleIsPlayingAudio} name=\"radio-audio\" />}\n                        label=\"Play audio\">\n                    </FormControlLabel>\n                <Grid item xs={12}>\n                    {calculatorButton('(')}\n                    {resetButton()}\n                    {calculatorButton(')')}\n                </Grid>\n\n                <Grid item xs={12}>\n                    {calculatorButton(7)}\n                    {calculatorButton(8)}\n                    {calculatorButton(9)}\n                    {calculatorButton('*')}\n                </Grid>\n\n                <Grid item xs={12}>\n                    {calculatorButton(4)}\n                    {calculatorButton(5)}\n                    {calculatorButton(6)}\n                    {calculatorButton('-')}\n                </Grid>\n                <Grid item xs={12}>\n                    {calculatorButton(3)}\n                    {calculatorButton(2)}\n                    {calculatorButton(1)}\n                    {calculatorButton('+')}\n                </Grid>\n                <Grid item xs={12}>\n                    {calculatorButton(0)}\n                    {calculatorButton('.')}\n                    {calculatorButton('/')}\n                    {equalButton()}\n                </Grid>\n            </Grid>\n        </div>\n    )\n};\n\nexport default Calculator;","import React from 'react'\n\nimport Calculator from '@johnpaul97/pocket-calculator'\nimport '@johnpaul97/pocket-calculator/dist/index.css'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}