{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, TextField, Grid, Switch, FormControlLabel}  from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst INITIAL_RESULT = 0;\n\nconst DEFAULTS = {\n    backgroundColor: '#7e7e7e',\n    buttonColor: '#46403D',\n    resultLabel: 'result',\n    expressionLabel: 'expression',\n}\n\nconst Calculator = props => {\n    const { backgroundColor, buttonColor, resultLabel, expressionLabel } = props,\n        classes = makeStyles(theme => ({\n            root: {\n                padding: '10px',\n                margin: '10px',\n                width: '50%',\n                backgroundColor: backgroundColor || DEFAULTS.backgroundColor,\n                borderRadius: '10px',\n                border: `1px solid black`,\n                flexGrow: 0,\n                width: '300px'\n            },\n            button: {\n                padding: theme.spacing(1),\n                textAlign: \"center\",\n                color: theme.palette.text.primary,\n                backgroundColor: buttonColor || DEFAULTS.buttonColor,\n                margin: \"5px\"\n            },\n            resultField: {\n                padding: theme.spacing(1),\n                backgroundColor: backgroundColor || DEFAULTS.backgroundColor,\n            },\n            padding: {\n                padding: 'top 10px'\n            }\n        }))()\n        , audio = new Audio(\"https://storage.cloud.google.com/johnpaul-bucket/click2.mp3\");\n\n    const CustomSwitch = withStyles({\n        switchBase: {\n            color: backgroundColor || DEFAULTS.backgroundColor,\n            '&$checked': {\n                color: buttonColor || DEFAULTS.buttonColor,\n            },\n            '&$checked + $track': {\n                backgroundColor: buttonColor || DEFAULTS.buttonColor,\n            },\n        },\n        checked: {},\n        track: {},\n    })(Switch);\n\n    const [expression, setExpression] = useState(INITIAL_RESULT);\n    const [result, setResult] = useState(INITIAL_RESULT);\n    const [isPlayingAudio, setIsPlayingAudio] = useState(true);\n\n    const playsAudio = () => {\n        if (isPlayingAudio) {\n            audio.play();\n        }\n    }\n\n    const handleIsPlayingAudio = () => {\n        setIsPlayingAudio(!isPlayingAudio);\n    }\n\n    const handleOnClick = (button) => {\n        playsAudio();\n        const newExpr = expression !== 0 ? `${expression}${button}` : button;\n        setExpression(newExpr);\n    }\n\n    //callback for set expression hook\n    useEffect(() => {\n        updateResult();\n    }, [expression]);\n\n    const handleReset = () => {\n        playsAudio();\n        setExpression(INITIAL_RESULT);\n        setResult(INITIAL_RESULT);\n    }\n\n    const handleEqualOnClick = () => {\n        playsAudio();\n        setExpression(result);\n    }\n\n    const updateResult = () => {\n        let newResult = null;\n\n        try {\n            newResult = eval(expression);\n        }\n        catch (err) {\n            newResult = 'error';\n        }\n\n        setResult(newResult);\n    }\n\n    const handleResultOnchange = (e) => {\n        const { value } = e.target;\n\n        value === '' ? setExpression(0) : setExpression(value);\n    }\n\n    function calculatorButton(value) {\n        return <Button className={classes.button} onClick={() => handleOnClick(value)}>{value}</Button>;\n    }\n\n    function resetButton() {\n        return <Button className={classes.button} onClick={() => handleReset()}>C</Button>;\n    }\n\n    function equalButton() {\n        return <Button className={classes.button} onClick={() => handleEqualOnClick()}>=</Button>;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.resultField}\n                        id=\"outlined-helperText\"\n                        label={resultLabel || DEFAULTS.resultLabel}\n                        variant=\"outlined\"\n                        value={result}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.resultField}\n                        id=\"outlined-helperText\"\n                        label={expressionLabel || DEFAULTS.expressionLabel}\n\n                        variant=\"outlined\"\n                        onChange={handleResultOnchange} value={expression}\n                    />\n                </Grid>\n                <FormControlLabel control={<CustomSwitch checked={isPlayingAudio} onChange={handleIsPlayingAudio} name=\"radio-audio\" />}\n                        label=\"Play audio\">\n                    </FormControlLabel>\n                <Grid item xs={12}>\n                    {calculatorButton('(')}\n                    {resetButton()}\n                    {calculatorButton(')')}\n                </Grid>\n\n                <Grid item xs={12}>\n                    {calculatorButton(7)}\n                    {calculatorButton(8)}\n                    {calculatorButton(9)}\n                    {calculatorButton('*')}\n                </Grid>\n\n                <Grid item xs={12}>\n                    {calculatorButton(4)}\n                    {calculatorButton(5)}\n                    {calculatorButton(6)}\n                    {calculatorButton('-')}\n                </Grid>\n                <Grid item xs={12}>\n                    {calculatorButton(3)}\n                    {calculatorButton(2)}\n                    {calculatorButton(1)}\n                    {calculatorButton('+')}\n                </Grid>\n                <Grid item xs={12}>\n                    {calculatorButton(0)}\n                    {calculatorButton('.')}\n                    {calculatorButton('/')}\n                    {equalButton()}\n                </Grid>\n            </Grid>\n        </div>\n    )\n};\n\nexport default Calculator;"],"names":["INITIAL_RESULT","DEFAULTS","backgroundColor","buttonColor","resultLabel","expressionLabel","Calculator","props","classes","makeStyles","theme","root","padding","margin","width","borderRadius","border","flexGrow","button","spacing","textAlign","color","palette","text","primary","resultField","audio","Audio","CustomSwitch","withStyles","switchBase","checked","track","Switch","useState","expression","setExpression","result","setResult","isPlayingAudio","setIsPlayingAudio","playsAudio","play","handleIsPlayingAudio","handleOnClick","newExpr","useEffect","updateResult","handleReset","handleEqualOnClick","newResult","eval","err","handleResultOnchange","e","value","target","calculatorButton","React","Button","resetButton","equalButton","Grid","TextField","FormControlLabel"],"mappings":"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"}